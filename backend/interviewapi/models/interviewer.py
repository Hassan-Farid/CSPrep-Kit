# -*- coding: utf-8 -*-

"""
interviewapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Interviewer(object):

    """Implementation of the 'Interviewer' model.

    Provides random question for preparation for CS Interviews

    Attributes:
        name (string): Question
        link (string): Link to explore answer to question

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "link": 'link'
    }

    def __init__(self,
                 name=None,
                 link=None):
        """Constructor for the Interviewer class"""

        # Initialize members of the class
        self.name = name
        self.link = link

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get('name')
        link = dictionary.get('link')

        # Return an object of this model
        return cls(name,
                   link)
